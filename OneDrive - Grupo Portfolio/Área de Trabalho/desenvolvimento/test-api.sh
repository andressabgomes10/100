#!/bin/bash
# üß™ Cole√ß√£o de Testes cURL - Revenda Proximidade API
# Pronto para colar e executar

# Vari√°veis locais
API="http://localhost:3001"
KEY="changeme"

echo "üöÄ Testando Revenda Proximidade API"
echo "=================================="

# 1) Health (p√∫blico)
echo -e "\n1Ô∏è‚É£ Health Check (p√∫blico):"
curl -s "$API/health" | python -m json.tool

# 2) CEP (com API Key)
echo -e "\n2Ô∏è‚É£ Buscar CEP (com API Key):"
curl -s -H "x-api-key: $KEY" "$API/cep/60115000" | python -m json.tool

# 3) Revenda mais pr√≥xima (empresarial)
echo -e "\n3Ô∏è‚É£ Revenda mais pr√≥xima (empresarial):"
curl -s -X POST "$API/revenda-mais-proxima" \
  -H "x-api-key: $KEY" \
  -H "Content-Type: application/json" \
  -d '{"cep":"60115000","tipo":"empresarial"}' | python -m json.tool

# 4) Lista paginada
echo -e "\n4Ô∏è‚É£ Lista revendas (paginada):"
curl -s -H "x-api-key: $KEY" "$API/revendas?limit=5&offset=0" | python -m json.tool

# 5) Upsert de revenda
echo -e "\n5Ô∏è‚É£ Upsert de revenda:"
curl -s -X POST "$API/revendas" \
  -H "x-api-key: $KEY" \
  -H "Content-Type: application/json" \
  -d '{
    "cnpj": "12345678000199",
    "nome_fantasia": "Revenda Centro",
    "cep": "60000000",
    "cidade": "Fortaleza",
    "uf": "CE",
    "latitude": -3.7172,
    "longitude": -38.5434,
    "ativo": true,
    "service_radius_km": 10,
    "prioridade": 5,
    "atende_empresarial": true,
    "atende_residencial": true
  }' | python -m json.tool

# 6) Stats
echo -e "\n6Ô∏è‚É£ Estat√≠sticas:"
curl -s -H "x-api-key: $KEY" "$API/stats" | python -m json.tool

# 7) Teste de erro - CEP inv√°lido
echo -e "\n7Ô∏è‚É£ Teste de erro - CEP inv√°lido:"
curl -s -H "x-api-key: $KEY" "$API/cep/123" | python -m json.tool

# 8) Teste de erro - API Key ausente
echo -e "\n8Ô∏è‚É£ Teste de erro - API Key ausente:"
curl -s "$API/cep/60115000" | python -m json.tool

echo -e "\n‚úÖ Testes conclu√≠dos!"
echo "üí° Dica: No Windows, troque 'python -m json.tool' por '| python -m json.tool' ou remova o pipe"
